name: Deploy Portfolio to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Validate HTML, CSS, and JS
  validate:
    runs-on: ubuntu-latest
    name: Validate Code Quality
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm init -y
        npm install --save-dev htmlhint stylelint stylelint-config-standard eslint
        
    - name: Validate HTML
      run: |
        npx htmlhint index.html || echo "HTML validation completed with warnings"
        
    - name: Validate CSS
      run: |
        npx stylelint styles.css --config-basedir . || echo "CSS validation completed with warnings"
        
    - name: Validate JavaScript
      run: |
        npx eslint script.js || echo "JavaScript validation completed with warnings"

  # Build and deploy to GitHub Pages
  deploy:
    needs: validate
    runs-on: ubuntu-latest
    name: Deploy to GitHub Pages
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Optional: Performance testing
  lighthouse:
    needs: deploy
    runs-on: ubuntu-latest
    name: Lighthouse Performance Audit
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
        configPath: ./.github/lighthouse/lighthouserc.json
        uploadArtifacts: true
        temporaryPublicStorage: true